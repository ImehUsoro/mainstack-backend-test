"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.productRoutes = void 0;
const express_1 = require("express");
const productController_1 = require("../controllers/productController");
const authenticateToken_1 = __importDefault(require("../middleware/authenticateToken"));
const productRouteValidators_1 = require("../middleware/productRouteValidators");
const userRouteValidators_1 = require("../middleware/userRouteValidators");
const validate_1 = require("../middleware/validate");
const fileUploader_1 = require("../utils/fileUploader");
const router = (0, express_1.Router)();
exports.productRoutes = router;
router.post("/create-product", authenticateToken_1.default, fileUploader_1.uploadSingle, productRouteValidators_1.validateProduct, validate_1.validate, productController_1.createProduct);
router.get("/get-products", authenticateToken_1.default, productController_1.getProducts);
router.get("/get-product/:id", authenticateToken_1.default, userRouteValidators_1.validateId, validate_1.validate, productController_1.getProductById);
router.get("/search-product", authenticateToken_1.default, productRouteValidators_1.validateSearchProducts, validate_1.validate, productController_1.searchProduct);
router.get("/get-products-by-category", authenticateToken_1.default, productRouteValidators_1.validateGetProductsByCategory, validate_1.validate, productController_1.getProductsByCategory);
router.patch("/update-product/:id", authenticateToken_1.default, userRouteValidators_1.validateId, validate_1.validate, productController_1.updateProduct);
router.patch("/update-product-image/:id", authenticateToken_1.default, fileUploader_1.uploadSingle, userRouteValidators_1.validateId, validate_1.validate, productController_1.updateProductImage);
router.patch("/update-product-specifications/:id", authenticateToken_1.default, userRouteValidators_1.validateId, validate_1.validate, productController_1.updateProductSpecifications);
router.delete("/delete-product/:id", authenticateToken_1.default, userRouteValidators_1.validateId, validate_1.validate, productController_1.deleteProduct);
